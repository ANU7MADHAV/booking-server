// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ariplane {
  id          Int    @id @unique @default(autoincrement())
  modelNumber String
  capacity    Int
}

model City {
  id       Int       @id @unique @default(autoincrement())
  name     String    @unique
  airports Airport[] @relation("CityAirports")
}

model Airport {
  id        Int      @id @unique @default(autoincrement())
  name      String   @unique
  code      String   @unique
  cityId    Int
  city      City     @relation("CityAirports", fields: [cityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  departures Flight[] @relation("DepatureAirport")
  arrivals  Flight[] @relation("ArrivalAirport")
}

model Flight {
  flightNumber     Int      @unique @default(autoincrement())
  airplaneId       Int      @id @unique
  departureCode    String
  departureAirport Airport  @relation("DepatureAirport", fields: [departureCode], references: [code], onDelete: Cascade, onUpdate: Cascade)
  arrivalCode      String
  arrivalAirport   Airport  @relation("ArrivalAirport", fields: [arrivalCode], references: [code], onDelete: Cascade, onUpdate: Cascade)
  departureTime    DateTime
  arrivalTime      DateTime
  price            Int
  boardingGate     String
  totalSeats       Int
}
